---
# This playbook installs and enables IIS on Windows hosts

- name: Install IIS
  hosts: localhost
  connection: local
  vars:

    # env vars come from credential when using Tower or manual set env vars when using ansible-playbook
    client_id: "{{ lookup('env','AZURE_CLIENT_ID') }}"
    secret: "{{ lookup('env','AZURE_SECRET') }}"
    subscription_id: "{{ lookup('env','AZURE_SUBSCRIPTION_ID') }}"
    tenant: "{{ lookup('env','AZURE_TENANT') }}"

    ansible_connection: winrm
    ansible_winrm_server_cert_validation: ignore
    ansible_winrm_transport: credssp

  tasks:
  # Update rules on existing security group to open http(s) ports
  - name: Open http(s) ports in azure
    azure_rm_securitygroup:
      subscription_id: "{{ subscription_id }}"
      secret: "{{ secret }}"
      tenant: "{{ tenant }}"
      client_id: "{{ client_id }}"
      resource_group: "{{ ansible_hostname }}_ng"
      name: "{{ ansible_hostname }}01"
      rules:
        - name: http
          protocol: Tcp
          destination_port_range: 80
          access: Allow
          priority: 1001
          direction: Inbound
        - name: https
          protocol: Tcp
          destination_port_range: 443
          access: Allow
          priority: 1002
          direction: Inbound

  hosts: webservers

  tasks:
  - name: Install Web-Server
    win_feature:
      name: Web-Server
      state: present
      include_sub_features: yes
      include_management_tools: yes

  - name: Disable Domain firewall
    win_firewall:
      state: disabled

  - name: reboot if installing feature requires it
    win_reboot:
    when: win_feature.reboot_required
    
